// Factory "morphs" into a Pudding class.
// The reasoning is that calling load in each context
// is cumbersome.

(function() {

  var contract_data = {
    abi: [{"constant":true,"inputs":[{"name":"player","type":"address"}],"name":"getState","outputs":[{"name":"state","type":"uint8"}],"type":"function"},{"constant":false,"inputs":[{"name":"client","type":"address"}],"name":"commit","outputs":[],"type":"function"},{"constant":true,"inputs":[],"name":"getStateMap","outputs":[{"name":"map","type":"address[3]"}],"type":"function"},{"constant":true,"inputs":[{"name":"player","type":"address"}],"name":"getAuthority","outputs":[{"name":"authority","type":"address"}],"type":"function"},{"constant":true,"inputs":[{"name":"player","type":"address"}],"name":"getTimeVerified","outputs":[{"name":"time","type":"uint64"}],"type":"function"},{"constant":false,"inputs":[],"name":"AnimistTest","outputs":[],"type":"function"},{"constant":false,"inputs":[{"name":"client","type":"address"},{"name":"time","type":"uint64"}],"name":"verify","outputs":[],"type":"function"},{"constant":false,"inputs":[{"name":"client","type":"address"}],"name":"rewardClient","outputs":[],"type":"function"},{"constant":false,"inputs":[{"name":"client","type":"address"}],"name":"advanceClient","outputs":[{"name":"endBlock","type":"uint256"}],"type":"function"},{"anonymous":false,"inputs":[{"indexed":true,"name":"player","type":"address"},{"indexed":true,"name":"node","type":"address"},{"indexed":true,"name":"thisContract","type":"address"}],"name":"LogRegistration","type":"event"}],
    binary: "60606040526108d0806100126000396000f3606060405236156100775760e060020a60003504631bab58f58114610079578063369e8c1d146100ab57806359d171e2146100db5780635fabcaaf1461014157806382eb51fc1461016a57806394d1ce49146101a3578063b0ff50d9146101ee578063e48c7b6914610234578063ec77a3a414610262575b005b6102a4600435600160a060020a03811660009081526004602052604090206001015460a060020a900460ff165b919050565b610077600435600160a060020a038181166000908152600460205260408120549091839116821461032a57610002565b6102bb6060604051908101604052806003905b60008152602001906001900390816100ee5750506040805160608101918290529060019060039082845b8154600160a060020a0316815260019190910190602001808311610118575b5050505050905090565b6102dd600435600160a060020a03818116600090815260046020526040902060010154166100a6565b6102fa600435600160a060020a03811660009081526004602052604090206002015467ffffffffffffffff60a060020a909104166100a6565b6000805461ff00191661020017905560018054600160a060020a031990811673579fadbb36a7b7284ef4e50bbc83f3f294e9a8ec908117909255600280549091169091179055610077565b61007760043560243560008054600160a060020a03841682526004602052604090912060010154839160ff610100909104811660a060020a90920416106104c857610002565b610077600435600160a060020a0381811660009081526004602052604081205483921614156105a457610002565b61031860043560008054600160a060020a038316825260046020526040822060010154839160ff610100909104811660a060020a909204161061072a57610002565b6040805160ff929092168252519081900360200190f35b6040518082606080838184600060046030f15090500191505060405180910390f35b60408051600160a060020a03929092168252519081900360200190f35b6040805167ffffffffffffffff929092168252519081900360200190f35b60408051918252519081900360200190f35b60005460ff16151561033b57610002565b6040805160c0810182528481523360208281019182526000838501818152606085018281526080860183815260a08701848152600160a060020a038c16855260049095529690922094518554600160a060020a03199081169091178655935160018681018054935193871690921774ff0000000000000000000000000000000000000000191660a060020a938402179091559151600286018054975197909516177bffffffffffffffff0000000000000000000000000000000000000000191695029490941790915551600391909101556005805491820180825573579fadbb36a7b7284ef4e50bbc83f3f294e9a8ec945090919082818380158290116104655781836000526020600020918201910161046591905b808211156104c45760008155600101610451565b50505060009283525060208220018054600160a060020a0319168517905560405130600160a060020a039081169286821692918616917fbf2838abc9c382fb1ebe7c6c085800054b50c6b634989a38ca619e318f6cc9439190a4505050565b5090565b600160a060020a0383811660009081526004602052604081205485921614156104f057610002565b600160a060020a0384166000908152600460205260409020600190810154859160a060020a90910460ff9081168201919082166003811015610002570154600160a060020a03908116339091161461054757610002565b50505050600160a060020a0382166000908152600460205260409020600201805460a060020a8302600160a060020a03199190911633177bffffffffffffffff000000000000000000000000000000000000000019161790555050565b600160a060020a03828116600090815260046020526040902060010154839190811633909116146105d457610002565b600160a060020a03831660009081526004602052604090206003015483904390116105fe57610002565b61071e846000808080805b60055460ff8516101561089457600160a060020a03861660009081526004602081905260408220600201546005805460a060020a90920467ffffffffffffffff1696509192919060ff881690811015610002577f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db00154600160a060020a031682526040822060020154815460a060020a90910467ffffffffffffffff16955060ff881690811015610002577f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db00154600160a060020a03168252506040812060030154925082148015915061071057508167ffffffffffffffff168367ffffffffffffffff16115b156108a25760009450610899565b15610724575b50505050565b600160a060020a03838116600090815260046020526040812054859216141561075257610002565b600160a060020a0384166000908152600460205260409020600190810154859160a060020a90910460ff9081168201919082166003811015610002570154600160a060020a038381166000908152604090206002015481169116146107b657610002565b600160a060020a03868116600090815260046020526040902060010154879190811633909116146107e657610002565b600160a060020a03871660009081526004602052604081206001818101805474ff000000000000000000000000000000000000000019811660a060020a9182900460ff908116909401820217918290556002939093018054600160a060020a0319169055925461086b938b93849361010090930483169104909116146108ae57610002565b50505050600160a060020a03831660009081526004602052604090206003015491506100a69050565b600194505b50505050919050565b60019390930192610609565b50600160a060020a03166000908152600460205260409020436003919091015556",
    unlinked_binary: "60606040526108d0806100126000396000f3606060405236156100775760e060020a60003504631bab58f58114610079578063369e8c1d146100ab57806359d171e2146100db5780635fabcaaf1461014157806382eb51fc1461016a57806394d1ce49146101a3578063b0ff50d9146101ee578063e48c7b6914610234578063ec77a3a414610262575b005b6102a4600435600160a060020a03811660009081526004602052604090206001015460a060020a900460ff165b919050565b610077600435600160a060020a038181166000908152600460205260408120549091839116821461032a57610002565b6102bb6060604051908101604052806003905b60008152602001906001900390816100ee5750506040805160608101918290529060019060039082845b8154600160a060020a0316815260019190910190602001808311610118575b5050505050905090565b6102dd600435600160a060020a03818116600090815260046020526040902060010154166100a6565b6102fa600435600160a060020a03811660009081526004602052604090206002015467ffffffffffffffff60a060020a909104166100a6565b6000805461ff00191661020017905560018054600160a060020a031990811673579fadbb36a7b7284ef4e50bbc83f3f294e9a8ec908117909255600280549091169091179055610077565b61007760043560243560008054600160a060020a03841682526004602052604090912060010154839160ff610100909104811660a060020a90920416106104c857610002565b610077600435600160a060020a0381811660009081526004602052604081205483921614156105a457610002565b61031860043560008054600160a060020a038316825260046020526040822060010154839160ff610100909104811660a060020a909204161061072a57610002565b6040805160ff929092168252519081900360200190f35b6040518082606080838184600060046030f15090500191505060405180910390f35b60408051600160a060020a03929092168252519081900360200190f35b6040805167ffffffffffffffff929092168252519081900360200190f35b60408051918252519081900360200190f35b60005460ff16151561033b57610002565b6040805160c0810182528481523360208281019182526000838501818152606085018281526080860183815260a08701848152600160a060020a038c16855260049095529690922094518554600160a060020a03199081169091178655935160018681018054935193871690921774ff0000000000000000000000000000000000000000191660a060020a938402179091559151600286018054975197909516177bffffffffffffffff0000000000000000000000000000000000000000191695029490941790915551600391909101556005805491820180825573579fadbb36a7b7284ef4e50bbc83f3f294e9a8ec945090919082818380158290116104655781836000526020600020918201910161046591905b808211156104c45760008155600101610451565b50505060009283525060208220018054600160a060020a0319168517905560405130600160a060020a039081169286821692918616917fbf2838abc9c382fb1ebe7c6c085800054b50c6b634989a38ca619e318f6cc9439190a4505050565b5090565b600160a060020a0383811660009081526004602052604081205485921614156104f057610002565b600160a060020a0384166000908152600460205260409020600190810154859160a060020a90910460ff9081168201919082166003811015610002570154600160a060020a03908116339091161461054757610002565b50505050600160a060020a0382166000908152600460205260409020600201805460a060020a8302600160a060020a03199190911633177bffffffffffffffff000000000000000000000000000000000000000019161790555050565b600160a060020a03828116600090815260046020526040902060010154839190811633909116146105d457610002565b600160a060020a03831660009081526004602052604090206003015483904390116105fe57610002565b61071e846000808080805b60055460ff8516101561089457600160a060020a03861660009081526004602081905260408220600201546005805460a060020a90920467ffffffffffffffff1696509192919060ff881690811015610002577f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db00154600160a060020a031682526040822060020154815460a060020a90910467ffffffffffffffff16955060ff881690811015610002577f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db00154600160a060020a03168252506040812060030154925082148015915061071057508167ffffffffffffffff168367ffffffffffffffff16115b156108a25760009450610899565b15610724575b50505050565b600160a060020a03838116600090815260046020526040812054859216141561075257610002565b600160a060020a0384166000908152600460205260409020600190810154859160a060020a90910460ff9081168201919082166003811015610002570154600160a060020a038381166000908152604090206002015481169116146107b657610002565b600160a060020a03868116600090815260046020526040902060010154879190811633909116146107e657610002565b600160a060020a03871660009081526004602052604081206001818101805474ff000000000000000000000000000000000000000019811660a060020a9182900460ff908116909401820217918290556002939093018054600160a060020a0319169055925461086b938b93849361010090930483169104909116146108ae57610002565b50505050600160a060020a03831660009081526004602052604090206003015491506100a69050565b600194505b50505050919050565b60019390930192610609565b50600160a060020a03166000908152600460205260409020436003919091015556",
    address: "",
    generated_with: "2.0.9",
    contract_name: "ProvidedRace"
  };

  function Contract() {
    if (Contract.Pudding == null) {
      throw new Error("ProvidedRace error: Please call load() first before creating new instance of this contract.");
    }

    Contract.Pudding.apply(this, arguments);
  };

  Contract.load = function(Pudding) {
    Contract.Pudding = Pudding;

    Pudding.whisk(contract_data, Contract);

    // Return itself for backwards compatibility.
    return Contract;
  }

  Contract.new = function() {
    if (Contract.Pudding == null) {
      throw new Error("ProvidedRace error: Please call load() first before calling new().");
    }

    return Contract.Pudding.new.apply(Contract, arguments);
  };

  Contract.at = function() {
    if (Contract.Pudding == null) {
      throw new Error("ProvidedRace error: Please call load() first before calling at().");
    }

    return Contract.Pudding.at.apply(Contract, arguments);
  };

  Contract.deployed = function() {
    if (Contract.Pudding == null) {
      throw new Error("ProvidedRace error: Please call load() first before calling deployed().");
    }

    return Contract.Pudding.deployed.apply(Contract, arguments);
  };

  if (typeof module != "undefined" && typeof module.exports != "undefined") {
    module.exports = Contract;
  } else {
    // There will only be one version of Pudding in the browser,
    // and we can use that.
    window.ProvidedRace = Contract;
  }

})();
