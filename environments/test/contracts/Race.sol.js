// Factory "morphs" into a Pudding class.
// The reasoning is that calling load in each context
// is cumbersome.

(function() {

  var contract_data = {
    abi: [{"constant":true,"inputs":[{"name":"racer","type":"address"}],"name":"getVerifier","outputs":[{"name":"verifier","type":"address"}],"type":"function"},{"constant":true,"inputs":[{"name":"","type":"uint256"}],"name":"stateMap","outputs":[{"name":"","type":"address"}],"type":"function"},{"constant":true,"inputs":[{"name":"racer","type":"address"}],"name":"getState","outputs":[{"name":"state","type":"uint8"}],"type":"function"},{"constant":false,"inputs":[],"name":"advanceSelf","outputs":[],"type":"function"},{"constant":true,"inputs":[],"name":"getMostRecentCommit","outputs":[{"name":"racer","type":"address"}],"type":"function"},{"constant":true,"inputs":[{"name":"racer","type":"address"}],"name":"getEndBlock","outputs":[{"name":"endBlock","type":"uint256"}],"type":"function"},{"constant":true,"inputs":[],"name":"getStateMap","outputs":[{"name":"map","type":"address[2]"}],"type":"function"},{"constant":true,"inputs":[{"name":"racer","type":"address"}],"name":"getAuthority","outputs":[{"name":"authority","type":"address"}],"type":"function"},{"constant":true,"inputs":[],"name":"startTime","outputs":[{"name":"","type":"uint64"}],"type":"function"},{"constant":true,"inputs":[{"name":"","type":"address"}],"name":"racers","outputs":[{"name":"account","type":"address"},{"name":"authority","type":"address"},{"name":"state","type":"uint8"},{"name":"verifier","type":"address"},{"name":"timeVerified","type":"uint64"},{"name":"endBlock","type":"uint256"}],"type":"function"},{"constant":true,"inputs":[{"name":"racer","type":"address"}],"name":"getTimeVerified","outputs":[{"name":"time","type":"uint64"}],"type":"function"},{"constant":true,"inputs":[],"name":"endState","outputs":[{"name":"","type":"uint8"}],"type":"function"},{"constant":true,"inputs":[{"name":"","type":"uint256"}],"name":"racerList","outputs":[{"name":"","type":"address"}],"type":"function"},{"constant":false,"inputs":[{"name":"client","type":"address"},{"name":"time","type":"uint64"}],"name":"verify","outputs":[],"type":"function"},{"constant":false,"inputs":[],"name":"rewardSelf","outputs":[],"type":"function"},{"constant":true,"inputs":[],"name":"openContract","outputs":[{"name":"","type":"bool"}],"type":"function"},{"constant":true,"inputs":[{"name":"racer","type":"address"}],"name":"getAccount","outputs":[{"name":"account","type":"address"}],"type":"function"},{"constant":false,"inputs":[],"name":"commitSelf","outputs":[],"type":"function"},{"inputs":[],"type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"name":"node","type":"address"},{"indexed":true,"name":"racer","type":"address"},{"indexed":true,"name":"contractAddress","type":"address"}],"name":"LogRegistration","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"","type":"uint8"}],"name":"LogTest","type":"event"}],
    binary: "60606040526000805460ff19604860020a60ff02199091166901000000000000000000171660019081178255805473579fadbb36a7b7284ef4e50bbc83f3f294e9a8ec600160a060020a03199182168117909255600280549091169091179055610ad890819061006e90396000f3606060405236156100da5760e060020a6000350463059ce95d81146100dc5780631003b502146101065780631bab58f5146101275780631e47505c1461015857806326cc8f041461018257806357702bff146101cf57806359d171e2146101f75780635fabcaaf1461025e57806378e9792514610287578063790c51551461029f57806382eb51fc146102f7578063846329f11461032f5780638e1ffe7c14610342578063b0ff50d914610376578063dd26851a146103a7578063f1864f1a146103d1578063fbcbc0f1146103dd578063fca285c814610403575b005b61042c600435600160a060020a03818116600090815260036020526040902060020154165b919050565b61042c600435600181600281101561000257500154600160a060020a031681565b610449600435600160a060020a03811660009081526003602052604090206001015460a060020a900460ff16610101565b600160a060020a033381166000908152600360205260408120546100da921614156105d657610002565b61042c60048054600091906000198101908110156100025750805491527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19a0154600160a060020a03165b90565b610460600435600160a060020a03811660009081526003602081905260409091200154610101565b6104726040604051908101604052806002905b600081526020019060019003908161020a57505060408051808201918290529060019060029082845b8154600160a060020a0316815260019190910190602001808311610233575b505050505090506101cc565b61042c600435600160a060020a0381811660009081526003602052604090206001015416610101565b610496600054610100900467ffffffffffffffff1681565b6104b3600435600360208190526000918252604090912060028101549181015460018201549154600160a060020a03908116938382169360a060020a9081900460ff169392821692910467ffffffffffffffff169086565b610496600435600160a060020a03811660009081526003602052604090206002015460a060020a900467ffffffffffffffff16610101565b610449600054604860020a900460ff1681565b61042c6004356004805482908110156100025750600052600080516020610ab88339815191520154600160a060020a031681565b6100da600435602435600160a060020a03828116600090815260036020526040812054849216141561067057610002565b600160a060020a033381166000908152600360205260408120546100da9216141561076357610002565b61051460005460ff1681565b61042c600435600160a060020a0381811660009081526003602052604090205416610101565b600160a060020a033381166000908152600360205260408120546100da9216146108d657610002565b60408051600160a060020a03929092168252519081900360200190f35b6040805160ff929092168252519081900360200190f35b60408051918252519081900360200190f35b60408051908190839080838184600060046021f15090500191505060405180910390f35b6040805167ffffffffffffffff9092168252519081900360200190f35b6040518087600160a060020a0316815260200186600160a060020a031681526020018560ff16815260200184600160a060020a031681526020018367ffffffffffffffff168152602001828152602001965050505050505060405180910390f35b604080519115158252519081900360200190f35b600160a060020a03331660009081526003602052604081206001818101805474ff000000000000000000000000000000000000000019811660a060020a9182900460ff908116909401820217918290556002939093018054600160a060020a03191690559254604860020a900481169190920490911614156105d257436003600050600033600160a060020a03168152602001908152602001600020600050600301600050819055505b505b565b6000805433600160a060020a031682526003602052604090912060010154604860020a90910460ff90811660a060020a909204161061061457610002565b33600160a060020a0316600090815260036020526040902060019081015460a060020a900460ff908116820191908216600281101561000257604060002060020154910154600160a060020a0391821691161461052857610002565b60008054600160a060020a038516825260036020526040909120600101548491604860020a900460ff90811660a060020a90920416106106af57610002565b600160a060020a0384166000908152600360205260409020600190810154859160a060020a90910460ff9081168201919082166002811015610002570154600160a060020a03908116339091161461070657610002565b50505050600160a060020a0382166000908152600360205260409020600201805460a060020a8302600160a060020a03199190911633177bffffffffffffffff000000000000000000000000000000000000000019161790555050565b6000805433600160a060020a03168252600360205260409091206001015460a060020a900460ff908116604860020a90920416146107a057610002565b33600160a060020a0316600090815260036020819052604090912001544390106107c957610002565b6108ce336000808080805b60045460ff85161015610a9e5760048054600160a060020a038816600090815260036020819052604082206002015460a060020a900467ffffffffffffffff16965092909160ff88169081101561000257908252600080516020610ab8833981519152018190546101009190910a9004600160a060020a0316815260208101919091526040016000908120600201546004805460a060020a90920467ffffffffffffffff1694506003929160ff88169081101561000257600080516020610ab88339815191520154600160a060020a03168252506040812090910154915081148015906108c057508183115b15610aac5760009450610aa3565b156105d4575b565b60005460ff1615156001146108ea57610002565b6040805160c0810182523380825260208281018281526000848601818152606086018281526080870183815260a08801848152600160a060020a0390971684526003958690529790922095518654600160a060020a03199081169091178755925160018781018054935193861690921774ff0000000000000000000000000000000000000000191660a060020a938402179091559151600287018054985198909416177bffffffffffffffff0000000000000000000000000000000000000000191696029590951790559051910155600480549182018082559091908281838015829011610a05576000839052610a0590600080516020610ab88339815191529081019083015b80821115610a9a57600081556001016109f1565b50505060009283525060208220018054600160a060020a031916331790556105d4905b600260ff821610156105d25730600160a060020a031633600160a060020a031660016000508360ff166002811015610002570154604051600160a060020a0391909116907fbf2838abc9c382fb1ebe7c6c085800054b50c6b634989a38ca619e318f6cc94390600090a4600101610a28565b5090565b600194505b50505050919050565b600193909301926107d4568a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b",
    unlinked_binary: "60606040526000805460ff19604860020a60ff02199091166901000000000000000000171660019081178255805473579fadbb36a7b7284ef4e50bbc83f3f294e9a8ec600160a060020a03199182168117909255600280549091169091179055610ad890819061006e90396000f3606060405236156100da5760e060020a6000350463059ce95d81146100dc5780631003b502146101065780631bab58f5146101275780631e47505c1461015857806326cc8f041461018257806357702bff146101cf57806359d171e2146101f75780635fabcaaf1461025e57806378e9792514610287578063790c51551461029f57806382eb51fc146102f7578063846329f11461032f5780638e1ffe7c14610342578063b0ff50d914610376578063dd26851a146103a7578063f1864f1a146103d1578063fbcbc0f1146103dd578063fca285c814610403575b005b61042c600435600160a060020a03818116600090815260036020526040902060020154165b919050565b61042c600435600181600281101561000257500154600160a060020a031681565b610449600435600160a060020a03811660009081526003602052604090206001015460a060020a900460ff16610101565b600160a060020a033381166000908152600360205260408120546100da921614156105d657610002565b61042c60048054600091906000198101908110156100025750805491527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19a0154600160a060020a03165b90565b610460600435600160a060020a03811660009081526003602081905260409091200154610101565b6104726040604051908101604052806002905b600081526020019060019003908161020a57505060408051808201918290529060019060029082845b8154600160a060020a0316815260019190910190602001808311610233575b505050505090506101cc565b61042c600435600160a060020a0381811660009081526003602052604090206001015416610101565b610496600054610100900467ffffffffffffffff1681565b6104b3600435600360208190526000918252604090912060028101549181015460018201549154600160a060020a03908116938382169360a060020a9081900460ff169392821692910467ffffffffffffffff169086565b610496600435600160a060020a03811660009081526003602052604090206002015460a060020a900467ffffffffffffffff16610101565b610449600054604860020a900460ff1681565b61042c6004356004805482908110156100025750600052600080516020610ab88339815191520154600160a060020a031681565b6100da600435602435600160a060020a03828116600090815260036020526040812054849216141561067057610002565b600160a060020a033381166000908152600360205260408120546100da9216141561076357610002565b61051460005460ff1681565b61042c600435600160a060020a0381811660009081526003602052604090205416610101565b600160a060020a033381166000908152600360205260408120546100da9216146108d657610002565b60408051600160a060020a03929092168252519081900360200190f35b6040805160ff929092168252519081900360200190f35b60408051918252519081900360200190f35b60408051908190839080838184600060046021f15090500191505060405180910390f35b6040805167ffffffffffffffff9092168252519081900360200190f35b6040518087600160a060020a0316815260200186600160a060020a031681526020018560ff16815260200184600160a060020a031681526020018367ffffffffffffffff168152602001828152602001965050505050505060405180910390f35b604080519115158252519081900360200190f35b600160a060020a03331660009081526003602052604081206001818101805474ff000000000000000000000000000000000000000019811660a060020a9182900460ff908116909401820217918290556002939093018054600160a060020a03191690559254604860020a900481169190920490911614156105d257436003600050600033600160a060020a03168152602001908152602001600020600050600301600050819055505b505b565b6000805433600160a060020a031682526003602052604090912060010154604860020a90910460ff90811660a060020a909204161061061457610002565b33600160a060020a0316600090815260036020526040902060019081015460a060020a900460ff908116820191908216600281101561000257604060002060020154910154600160a060020a0391821691161461052857610002565b60008054600160a060020a038516825260036020526040909120600101548491604860020a900460ff90811660a060020a90920416106106af57610002565b600160a060020a0384166000908152600360205260409020600190810154859160a060020a90910460ff9081168201919082166002811015610002570154600160a060020a03908116339091161461070657610002565b50505050600160a060020a0382166000908152600360205260409020600201805460a060020a8302600160a060020a03199190911633177bffffffffffffffff000000000000000000000000000000000000000019161790555050565b6000805433600160a060020a03168252600360205260409091206001015460a060020a900460ff908116604860020a90920416146107a057610002565b33600160a060020a0316600090815260036020819052604090912001544390106107c957610002565b6108ce336000808080805b60045460ff85161015610a9e5760048054600160a060020a038816600090815260036020819052604082206002015460a060020a900467ffffffffffffffff16965092909160ff88169081101561000257908252600080516020610ab8833981519152018190546101009190910a9004600160a060020a0316815260208101919091526040016000908120600201546004805460a060020a90920467ffffffffffffffff1694506003929160ff88169081101561000257600080516020610ab88339815191520154600160a060020a03168252506040812090910154915081148015906108c057508183115b15610aac5760009450610aa3565b156105d4575b565b60005460ff1615156001146108ea57610002565b6040805160c0810182523380825260208281018281526000848601818152606086018281526080870183815260a08801848152600160a060020a0390971684526003958690529790922095518654600160a060020a03199081169091178755925160018781018054935193861690921774ff0000000000000000000000000000000000000000191660a060020a938402179091559151600287018054985198909416177bffffffffffffffff0000000000000000000000000000000000000000191696029590951790559051910155600480549182018082559091908281838015829011610a05576000839052610a0590600080516020610ab88339815191529081019083015b80821115610a9a57600081556001016109f1565b50505060009283525060208220018054600160a060020a031916331790556105d4905b600260ff821610156105d25730600160a060020a031633600160a060020a031660016000508360ff166002811015610002570154604051600160a060020a0391909116907fbf2838abc9c382fb1ebe7c6c085800054b50c6b634989a38ca619e318f6cc94390600090a4600101610a28565b5090565b600194505b50505050919050565b600193909301926107d4568a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b",
    address: "0x2f55cfb2415ef210adeedc9c485286d04bb2d5d8",
    generated_with: "2.0.9",
    contract_name: "Race"
  };

  function Contract() {
    if (Contract.Pudding == null) {
      throw new Error("Race error: Please call load() first before creating new instance of this contract.");
    }

    Contract.Pudding.apply(this, arguments);
  };

  Contract.load = function(Pudding) {
    Contract.Pudding = Pudding;

    Pudding.whisk(contract_data, Contract);

    // Return itself for backwards compatibility.
    return Contract;
  }

  Contract.new = function() {
    if (Contract.Pudding == null) {
      throw new Error("Race error: Please call load() first before calling new().");
    }

    return Contract.Pudding.new.apply(Contract, arguments);
  };

  Contract.at = function() {
    if (Contract.Pudding == null) {
      throw new Error("Race error: Please call load() first before calling at().");
    }

    return Contract.Pudding.at.apply(Contract, arguments);
  };

  Contract.deployed = function() {
    if (Contract.Pudding == null) {
      throw new Error("Race error: Please call load() first before calling deployed().");
    }

    return Contract.Pudding.deployed.apply(Contract, arguments);
  };

  if (typeof module != "undefined" && typeof module.exports != "undefined") {
    module.exports = Contract;
  } else {
    // There will only be one version of Pudding in the browser,
    // and we can use that.
    window.Race = Contract;
  }

})();
