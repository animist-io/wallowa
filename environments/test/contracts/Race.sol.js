// Factory "morphs" into a Pudding class.
// The reasoning is that calling load in each context
// is cumbersome.

(function() {

  var contract_data = {
    abi: [{"constant":true,"inputs":[{"name":"racer","type":"address"}],"name":"getVerifier","outputs":[{"name":"verifier","type":"address"}],"type":"function"},{"constant":true,"inputs":[{"name":"","type":"uint256"}],"name":"stateMap","outputs":[{"name":"node","type":"address"},{"name":"eventContract","type":"address"}],"type":"function"},{"constant":true,"inputs":[{"name":"racer","type":"address"}],"name":"getState","outputs":[{"name":"state","type":"uint8"}],"type":"function"},{"constant":false,"inputs":[],"name":"advanceSelf","outputs":[],"type":"function"},{"constant":true,"inputs":[],"name":"getMostRecentCommit","outputs":[{"name":"racer","type":"address"}],"type":"function"},{"constant":true,"inputs":[{"name":"racer","type":"address"}],"name":"getEndBlock","outputs":[{"name":"endBlock","type":"uint256"}],"type":"function"},{"constant":true,"inputs":[{"name":"racer","type":"address"}],"name":"getAuthority","outputs":[{"name":"authority","type":"address"}],"type":"function"},{"constant":true,"inputs":[],"name":"startTime","outputs":[{"name":"","type":"uint64"}],"type":"function"},{"constant":true,"inputs":[{"name":"","type":"address"}],"name":"racers","outputs":[{"name":"account","type":"address"},{"name":"authority","type":"address"},{"name":"state","type":"uint8"},{"name":"verifier","type":"address"},{"name":"timeVerified","type":"uint64"},{"name":"endBlock","type":"uint256"}],"type":"function"},{"constant":true,"inputs":[{"name":"racer","type":"address"}],"name":"getTimeVerified","outputs":[{"name":"time","type":"uint64"}],"type":"function"},{"constant":true,"inputs":[],"name":"endState","outputs":[{"name":"","type":"uint8"}],"type":"function"},{"constant":true,"inputs":[{"name":"","type":"uint256"}],"name":"racerList","outputs":[{"name":"","type":"address"}],"type":"function"},{"constant":true,"inputs":[],"name":"getStateMapLength","outputs":[{"name":"length","type":"uint256"}],"type":"function"},{"constant":false,"inputs":[{"name":"client","type":"address"},{"name":"time","type":"uint64"}],"name":"verify","outputs":[],"type":"function"},{"constant":false,"inputs":[],"name":"rewardSelf","outputs":[],"type":"function"},{"constant":true,"inputs":[],"name":"openContract","outputs":[{"name":"","type":"bool"}],"type":"function"},{"constant":true,"inputs":[{"name":"racer","type":"address"}],"name":"getAccount","outputs":[{"name":"account","type":"address"}],"type":"function"},{"constant":false,"inputs":[],"name":"commitSelf","outputs":[],"type":"function"},{"inputs":[],"type":"constructor"}],
    binary: "60606040526000805460ff19604860020a60ff02199091166901000000000000000000171660019081178255805473579fadbb36a7b7284ef4e50bbc83f3f294e9a8ec600160a060020a03199182168117909255600380549091169091179055610acc90819061006e90396000f3606060405236156100da5760e060020a6000350463059ce95d81146100dc5780631003b502146101065780631bab58f5146101355780631e47505c1461016657806326cc8f041461019057806357702bff146101de5780635fabcaaf1461020557806378e979251461022e578063790c51551461024657806382eb51fc1461029c578063846329f1146102d45780638e1ffe7c146102e7578063a9ac108e1461031b578063b0ff50d914610324578063dd26851a14610355578063f1864f1a1461037f578063fbcbc0f11461038b578063fca285c8146103b1575b005b6103da600435600160a060020a03818116600090815260056020526040902060020154165b919050565b6103f760043560018160028110156100025750600291820290810154910154600160a060020a03918216911682565b610426600435600160a060020a03811660009081526005602052604090206001015460a060020a900460ff16610101565b600160a060020a033381166000908152600560205260408120546100da9216141561059057610002565b6103da60068054600091906000198101908110156100025750805491527ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3e0154600160a060020a0316610321565b61043d600435600160a060020a038116600090815260056020526040902060030154610101565b6103da600435600160a060020a0381811660009081526005602052604090206001015416610101565b61044f600054610100900467ffffffffffffffff1681565b61046d6004356005602052600090815260409020805460018201546003830154600290930154600160a060020a03928316938284169360a060020a9384900460ff1693908316920467ffffffffffffffff169086565b61044f600435600160a060020a03811660009081526005602052604090206002015460a060020a900467ffffffffffffffff16610101565b610426600054604860020a900460ff1681565b6103da6004356006805482908110156100025750600052600080516020610aac8339815191520154600160a060020a031681565b61043d60025b90565b6100da600435602435600160a060020a03828116600090815260056020526040812054849216141561062f57610002565b600160a060020a033381166000908152600560205260408120546100da9216141561072557610002565b6104ce60005460ff1681565b6103da600435600160a060020a0381811660009081526005602052604090205416610101565b600160a060020a033381166000908152600560205260408120546100da92161461088c57610002565b60408051600160a060020a03929092168252519081900360200190f35b6040518083600160a060020a0316815260200182600160a060020a031681526020019250505060405180910390f35b6040805160ff929092168252519081900360200190f35b60408051918252519081900360200190f35b6040805167ffffffffffffffff929092168252519081900360200190f35b6040518087600160a060020a0316815260200186600160a060020a031681526020018560ff16815260200184600160a060020a031681526020018367ffffffffffffffff168152602001828152602001965050505050505060405180910390f35b604080519115158252519081900360200190f35b600160a060020a03331660009081526005602052604081206001818101805474ff000000000000000000000000000000000000000019811660a060020a9182900460ff908116909401820217918290556002939093018054600160a060020a03191690559254604860020a9004811691909204909116141561058c57436005600050600033600160a060020a03168152602001908152602001600020600050600301600050819055505b505b565b6000805433600160a060020a031682526005602052604090912060010154604860020a90910460ff90811660a060020a90920416106105ce57610002565b33600160a060020a0316600090815260056020526040902060019081015460a060020a900460ff9081168201919082166002811015610002576040600020600291820290920154910154600160a060020a039182169116146104e257610002565b60008054600160a060020a038516825260056020526040909120600101548491604860020a900460ff90811660a060020a909204161061066e57610002565b600160a060020a0384166000908152600560205260409020600190810154859160a060020a90910460ff9081168201919082166002811015610002576002020154600160a060020a0390811633909116146106c857610002565b50505050600160a060020a0382166000908152600560205260409020600201805460a060020a8302600160a060020a03199190911633177bffffffffffffffff000000000000000000000000000000000000000019161790555050565b6000805433600160a060020a03168252600560205260409091206001015460a060020a900460ff908116604860020a909204161461076257610002565b33600160a060020a031660009081526005602052604090206003015443901061078a57610002565b610884336000808080805b60065460ff85161015610a8d57600160a060020a03861660009081526005602081905260068054604084206002015460a060020a900467ffffffffffffffff16965091929160ff88169081101561000257600080516020610aac8339815191520154600160a060020a031682526040822060020154815460a060020a90910467ffffffffffffffff16955060ff88169081101561000257600080516020610aac8339815191520154600160a060020a03168252506040812060030154925082148015915061087657508167ffffffffffffffff168367ffffffffffffffff16115b15610a9b5760009450610a92565b1561058e575b565b60005460ff1615156001146108a057610002565b6040805160c0810182523380825260208281018281526000848601818152606086018281526080870183815260a08801848152600160a060020a03909716845260059095529690912094518554600160a060020a03199081169091178655915160018681018054935193851690921774ff0000000000000000000000000000000000000000191660a060020a938402179091559551600286018054945194909316177bffffffffffffffff00000000000000000000000000000000000000001916920291909117905551600391909101556006805491820180825590919082818380158290116109bd5760008390526109bd90600080516020610aac8339815191529081019083015b80821115610a8957600081556001016109a9565b50505060009283525060208220018054600160a060020a0319163317905561058e9080805b600260ff84161015610aa757600160ff84166002811015610002576002908102810154600160a060020a03169350839250829163f32014249160ff871690811015610002576002020160005060408051915460e060020a84028352600160a060020a039081166004840152338116602484015230166044830152516064828101926000929190829003018183876161da5a03f11561000257505050600192909201916109e2565b5090565b600194505b50505050919050565b60019390930192610795565b50505056f652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f",
    unlinked_binary: "60606040526000805460ff19604860020a60ff02199091166901000000000000000000171660019081178255805473579fadbb36a7b7284ef4e50bbc83f3f294e9a8ec600160a060020a03199182168117909255600380549091169091179055610acc90819061006e90396000f3606060405236156100da5760e060020a6000350463059ce95d81146100dc5780631003b502146101065780631bab58f5146101355780631e47505c1461016657806326cc8f041461019057806357702bff146101de5780635fabcaaf1461020557806378e979251461022e578063790c51551461024657806382eb51fc1461029c578063846329f1146102d45780638e1ffe7c146102e7578063a9ac108e1461031b578063b0ff50d914610324578063dd26851a14610355578063f1864f1a1461037f578063fbcbc0f11461038b578063fca285c8146103b1575b005b6103da600435600160a060020a03818116600090815260056020526040902060020154165b919050565b6103f760043560018160028110156100025750600291820290810154910154600160a060020a03918216911682565b610426600435600160a060020a03811660009081526005602052604090206001015460a060020a900460ff16610101565b600160a060020a033381166000908152600560205260408120546100da9216141561059057610002565b6103da60068054600091906000198101908110156100025750805491527ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3e0154600160a060020a0316610321565b61043d600435600160a060020a038116600090815260056020526040902060030154610101565b6103da600435600160a060020a0381811660009081526005602052604090206001015416610101565b61044f600054610100900467ffffffffffffffff1681565b61046d6004356005602052600090815260409020805460018201546003830154600290930154600160a060020a03928316938284169360a060020a9384900460ff1693908316920467ffffffffffffffff169086565b61044f600435600160a060020a03811660009081526005602052604090206002015460a060020a900467ffffffffffffffff16610101565b610426600054604860020a900460ff1681565b6103da6004356006805482908110156100025750600052600080516020610aac8339815191520154600160a060020a031681565b61043d60025b90565b6100da600435602435600160a060020a03828116600090815260056020526040812054849216141561062f57610002565b600160a060020a033381166000908152600560205260408120546100da9216141561072557610002565b6104ce60005460ff1681565b6103da600435600160a060020a0381811660009081526005602052604090205416610101565b600160a060020a033381166000908152600560205260408120546100da92161461088c57610002565b60408051600160a060020a03929092168252519081900360200190f35b6040518083600160a060020a0316815260200182600160a060020a031681526020019250505060405180910390f35b6040805160ff929092168252519081900360200190f35b60408051918252519081900360200190f35b6040805167ffffffffffffffff929092168252519081900360200190f35b6040518087600160a060020a0316815260200186600160a060020a031681526020018560ff16815260200184600160a060020a031681526020018367ffffffffffffffff168152602001828152602001965050505050505060405180910390f35b604080519115158252519081900360200190f35b600160a060020a03331660009081526005602052604081206001818101805474ff000000000000000000000000000000000000000019811660a060020a9182900460ff908116909401820217918290556002939093018054600160a060020a03191690559254604860020a9004811691909204909116141561058c57436005600050600033600160a060020a03168152602001908152602001600020600050600301600050819055505b505b565b6000805433600160a060020a031682526005602052604090912060010154604860020a90910460ff90811660a060020a90920416106105ce57610002565b33600160a060020a0316600090815260056020526040902060019081015460a060020a900460ff9081168201919082166002811015610002576040600020600291820290920154910154600160a060020a039182169116146104e257610002565b60008054600160a060020a038516825260056020526040909120600101548491604860020a900460ff90811660a060020a909204161061066e57610002565b600160a060020a0384166000908152600560205260409020600190810154859160a060020a90910460ff9081168201919082166002811015610002576002020154600160a060020a0390811633909116146106c857610002565b50505050600160a060020a0382166000908152600560205260409020600201805460a060020a8302600160a060020a03199190911633177bffffffffffffffff000000000000000000000000000000000000000019161790555050565b6000805433600160a060020a03168252600560205260409091206001015460a060020a900460ff908116604860020a909204161461076257610002565b33600160a060020a031660009081526005602052604090206003015443901061078a57610002565b610884336000808080805b60065460ff85161015610a8d57600160a060020a03861660009081526005602081905260068054604084206002015460a060020a900467ffffffffffffffff16965091929160ff88169081101561000257600080516020610aac8339815191520154600160a060020a031682526040822060020154815460a060020a90910467ffffffffffffffff16955060ff88169081101561000257600080516020610aac8339815191520154600160a060020a03168252506040812060030154925082148015915061087657508167ffffffffffffffff168367ffffffffffffffff16115b15610a9b5760009450610a92565b1561058e575b565b60005460ff1615156001146108a057610002565b6040805160c0810182523380825260208281018281526000848601818152606086018281526080870183815260a08801848152600160a060020a03909716845260059095529690912094518554600160a060020a03199081169091178655915160018681018054935193851690921774ff0000000000000000000000000000000000000000191660a060020a938402179091559551600286018054945194909316177bffffffffffffffff00000000000000000000000000000000000000001916920291909117905551600391909101556006805491820180825590919082818380158290116109bd5760008390526109bd90600080516020610aac8339815191529081019083015b80821115610a8957600081556001016109a9565b50505060009283525060208220018054600160a060020a0319163317905561058e9080805b600260ff84161015610aa757600160ff84166002811015610002576002908102810154600160a060020a03169350839250829163f32014249160ff871690811015610002576002020160005060408051915460e060020a84028352600160a060020a039081166004840152338116602484015230166044830152516064828101926000929190829003018183876161da5a03f11561000257505050600192909201916109e2565b5090565b600194505b50505050919050565b60019390930192610795565b50505056f652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f",
    address: "0x801c6f90bd305fcdd0ab09a58cd382380c78c45b",
    generated_with: "2.0.9",
    contract_name: "Race"
  };

  function Contract() {
    if (Contract.Pudding == null) {
      throw new Error("Race error: Please call load() first before creating new instance of this contract.");
    }

    Contract.Pudding.apply(this, arguments);
  };

  Contract.load = function(Pudding) {
    Contract.Pudding = Pudding;

    Pudding.whisk(contract_data, Contract);

    // Return itself for backwards compatibility.
    return Contract;
  }

  Contract.new = function() {
    if (Contract.Pudding == null) {
      throw new Error("Race error: Please call load() first before calling new().");
    }

    return Contract.Pudding.new.apply(Contract, arguments);
  };

  Contract.at = function() {
    if (Contract.Pudding == null) {
      throw new Error("Race error: Please call load() first before calling at().");
    }

    return Contract.Pudding.at.apply(Contract, arguments);
  };

  Contract.deployed = function() {
    if (Contract.Pudding == null) {
      throw new Error("Race error: Please call load() first before calling deployed().");
    }

    return Contract.Pudding.deployed.apply(Contract, arguments);
  };

  if (typeof module != "undefined" && typeof module.exports != "undefined") {
    module.exports = Contract;
  } else {
    // There will only be one version of Pudding in the browser,
    // and we can use that.
    window.Race = Contract;
  }

})();
